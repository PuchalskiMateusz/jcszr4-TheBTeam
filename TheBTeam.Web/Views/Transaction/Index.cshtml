@model IEnumerable<TheBTeam.BLL.Models.TransactionDto>
@using TheBTeam.BLL
@{
    ViewData["Title"] = "List of transactions";
}

@{
    var incomeList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) > 0 && int.Parse(l.Value) < 100).ToList();
    var outcomeList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) >= 100).ToList();
    var allList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l=> int.Parse(l.Value)==0);

}

<h1>List of transactions</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index">
    <div class="form-group">
        <label class="control-label"> Category and Type </label>
        <select style="width: 20%" name="type" id="transactionTypeSelect" asp-items="Html.GetEnumSelectList<TypeOfTransaction>()" class="form-control">
            <option selected="selected" value="wqeqw">Please select Type</option>
        </select>

        <select style="width: 20%" name="category" id="categorySelect" asp-items="new List<SelectListItem>()" class="form-control">
            <option selected="selected" value="">Please select category</option>
        </select>

    </div>
    <div class="form-group">
        <input type="submit" value="Search transaction" class="btn btn-primary" />
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>

                @*@Html.ActionLink("User.Email", "Index", new { sortOrder = ViewBag.NameSortParm })*@

                <label asp-for="First().UserDto.Email"></label>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OccurrenceTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BalanceAfterTransaction)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserDto.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OccurrenceTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Currency)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BalanceAfterTransaction)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        var outcomeOptions = @Html.Raw(Json.Serialize(outcomeList));
        var incomeOptions = @Html.Raw(Json.Serialize(incomeList));
        var allList= @Html.Raw(Json.Serialize(allList));
        var categorySelect = $('#categorySelect');
        $('#transactionTypeSelect').change(function () {
            categorySelect.empty();
            var selected = $(this).val();
            if (selected === '0') {
                addOptionsToSelect(allList);
            }
            if (selected === '1') {
                addOptionsToSelect(incomeOptions);

            }
            if (selected === '2') {
                addOptionsToSelect(outcomeOptions);
            }
        });

        function addOptionsToSelect(options) {
            options.forEach(function (i, item) {
                categorySelect.append($('<option>',
                    {
                        value: i.value,
                        text: i.text
                    }));
            });
        }
    });
</script>