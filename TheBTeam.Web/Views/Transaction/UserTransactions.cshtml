@using System.Linq
@using TheBTeam.BLL
@model TheBTeam.BLL.Models.TransactionSearchDto

@{
    ViewData["Title"] = "User's Transactions";
}

@{
    var incomeList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) > 0 && int.Parse(l.Value) < 100).ToList();
    var outcomeList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) >= 100).ToList();
    var allList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) == 0);
}

<h1>@Model.FullName's transactions list</h1>

<p>
    <a asp-action="AddTransaction" asp-route-id="@Model.UserId">Add New</a> |
    <a asp-controller="CategoryBudget" asp-action="UserBudget" asp-route-id="@Model.UserId">Budget</a> | 
    <a asp-controller="User" , asp-action="Index">Back to users List</a>
</p>

<form asp-action="UserTransactions">
    @{
        await Html.RenderPartialAsync("_TransactionSearchForm");
    }
</form>
<div class="container container shadow p-3 mb-5 bg-white rounded">
    <table class="table">
        <thead>
            <tr>

                <th>
                    <label asp-for="@Model.Transactions.First().Type"></label>
                </th>
                <th>
                    <label asp-for="@Model.Transactions.First().Category"></label>
                </th>
                <th>
                    <label asp-for="@Model.Transactions.First().WhenMade"></label>
                </th>
                <th>
                    <label asp-for="@Model.Transactions.First().Amount"></label>
                </th>
                <th>
                    <label asp-for="@Model.Transactions.First().Currency"></label>
                </th>
                <th>
                    <label asp-for="@Model.Transactions.First().BalanceAfterTransaction"></label>
                </th>
                <th>
                    <label asp-for="@Model.Transactions.First().Description"></label>
                </th>
                <th>
                    <label for="Actions">Actions</label>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Transactions)
            {
                <tr>

                    <td>
                        @item.Type
                    </td>
                    <td>
                        @item.Category
                    </td>
                    <td>
                        @item.WhenMade.ToString("d")
                    </td>
                    <td>
                        @item.Amount.ToString("C")
                    </td>
                    <td>
                        @item.Currency
                    </td>
                    <td>
                        @item.BalanceAfterTransaction.ToString("C")
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        <div class="dropdown">
                            <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                More
                            </a>

                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                                <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                <a class="dropdown-item" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                <a class="dropdown-item" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            </div>
                        </div>

                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>

    <script>
     $(document).ready(function () {
         var outcomeOptions = @Html.Raw(Json.Serialize(outcomeList));
         var incomeOptions = @Html.Raw(Json.Serialize(incomeList));
         var allList= @Html.Raw(Json.Serialize(allList));
         var categorySelect = $('#categorySelect');
         $('#transactionTypeSelect').change(function () {
             categorySelect.empty();
             var selected = $(this).val();
             if (selected === '0') {
                 addOptionsToSelect(allList);
             }
             if (selected === '1') {
                 addOptionsToSelect(incomeOptions);

             }
             if (selected === '2') {
                 addOptionsToSelect(outcomeOptions);
             }
         });

         function addOptionsToSelect(options) {
             options.forEach(function (i, item) {
                 categorySelect.append($('<option>',
                     {
                         value: i.value,
                         text: i.text
                     }));
             });
         }
     });
    </script>
