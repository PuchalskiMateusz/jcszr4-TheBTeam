@using TheBTeam.BLL
@model TheBTeam.BLL.Models.TransactionSearchDto


@{
    var incomeList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) > 0 && int.Parse(l.Value) < 100).ToList();
    var outcomeList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) >= 100).ToList();
    var allList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) == 0);
    var categoryList = new List<SelectListItem>();

    if (Model.Type == 0)
        categoryList = Html.GetEnumSelectList<CategoryOfTransaction>().Where(l => int.Parse(l.Value) == 0).ToList();
    else if ((int)Model.Type == 1)
        categoryList = incomeList;
    else
        categoryList = outcomeList;

    if(Model.DateTo ==default)
        Model.DateTo=DateTime.Now;

    if (Model.DateFrom == default && Model.Transactions.Any())
        Model.DateFrom = Model.Transactions.Min(x=>x.Date);
    else if (Model.DateFrom == default)
        Model.DateFrom = DateTime.Now.AddDays(-7);

}



<div class="row">
    <div class="col">
        <label class="col-form-label">Type:</label>
        <select name="type" asp-for="Type" id="transactionTypeSelect" asp-items="Html.GetEnumSelectList<TypeOfTransaction>()" class="form-control">
        </select>
    </div>
    <div class="col">
        <label class="col-form-label">Category:</label>
        <select name="category" asp-for="Category" id="categorySelect" asp-items="@categoryList" class="form-control">
        </select>
    </div>
</div>
<div class="row">
    <div class="col">
        <label class="col-form-label">Date form:</label>
        <input type="date" id="dateFrom" name="dateFrom" class="form-control"  asp-for="DateFrom" />
    </div>

    <div class="col">
        <label class="col-form-label">Date to:</label>
        <input type="date" id="dateTo" name="dateTo" class="form-control"  asp-for="DateTo" />
    </div>
</div>

<label class="col-form-label">Description</label>
<input style="margin-bottom:18px;" name="description" id="descrition" type="text" class="form-control" value="@Model.Description" />

<div class="form-group">
    <input type="submit" value="Search transaction" class="btn btn-secondary" />
</div>


<script>
    $(document).ready(function () {
        var outcomeOptions = @Html.Raw(Json.Serialize(outcomeList));
        var incomeOptions = @Html.Raw(Json.Serialize(incomeList));
        var allList = @Html.Raw(Json.Serialize(allList));
        var categorySelect = $('#categorySelect');
        $('#transactionTypeSelect').change(function () {
            categorySelect.empty();
            var selected = $(this).val();
            if (selected === '0') {
                addOptionsToSelect(allList);
            }
            if (selected === '1') {
                addOptionsToSelect(incomeOptions);

            }
            if (selected === '2') {
                addOptionsToSelect(outcomeOptions);
            }
        });

        function addOptionsToSelect(options) {
            options.forEach(function (i, item) {
                categorySelect.append($('<option>',
                    {
                        value: i.value,
                        text: i.text
                    }));
            });
        }
    });
</script>